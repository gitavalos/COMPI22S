'Generated by the GOLD Parser Builder

Option Explicit On
Option Strict Off

Imports System.IO
Imports System.Windows.Forms


Module MyParser
    Public LISTA As New List(Of LISTA_NODO)
    Public CONTADOR As Integer = 1
    Private Parser As New GOLD.Parser
    Private Function OBTENER_STRING(ByVal PADRE As NODO) As String
        Dim cadena As String = ""
        Dim ban1 As Boolean = False
        Dim ban2 As Boolean = False

        If Not (IsNothing(PADRE.hijo_izquierdo)) Then
            cadena = cadena & OBTENER_STRING(PADRE.hijo_izquierdo)
            ban1 = True
        End If
        If Not (IsNothing(PADRE.hijo_derecho)) Then
            cadena = cadena & OBTENER_STRING(PADRE.hijo_derecho)
            ban2 = True
        End If

        If (ban1 = False And ban2 = False) Then
            cadena = PADRE.layer
        End If

        Return cadena
    End Function

    Private Enum SymbolIndex
        [Eof] = 0                                 ' (EOF)
        [Error] = 1                               ' (Error)
        [Whitespace] = 2                          ' Whitespace
        [Minus] = 3                               ' '-'
        [Minusminus] = 4                          ' '--'
        [Dollar] = 5                              ' '$'
        [Percentansi] = 6                         ' '%ANSI'
        [Percentcasesensitive] = 7                ' '%caseSensitive'
        [Percentdefpercent] = 8                   ' '%Def%'
        [Percentreglaspercent] = 9                ' '%Reglas%'
        [Percenttokenpercent] = 10                ' '%TOKEN%'
        [Percentutf8] = 11                        ' '%UTF8'
        [Lparen] = 12                             ' '('
        [Rparen] = 13                             ' ')'
        [Rparensemi] = 14                         ' ');'
        [Times] = 15                              ' '*'
        [Comma] = 16                              ' ','
        [Dot] = 17                                ' '.'
        [Div] = 18                                ' '/'
        [Colon] = 19                              ' ':'
        [Semi] = 20                               ' ';'
        [Question] = 21                           ' '?'
        [Lbracket] = 22                           ' '['
        [Lbracketcolonblancocolonrbracket] = 23   ' '[:BLANCO:]'
        [Lbracketcolonespaciocolonrbracket] = 24  ' '[:ESPACIO:]'
        [Lbracketlbracket] = 25                   ' '[['
        [Backslashquote] = 26                     ' '\"'
        [Backslashn] = 27                         ' '\n'
        [Backslashr] = 28                         ' '\r'
        [Rbracket] = 29                           ' ']'
        [Rbracketrbracketsemi] = 30               ' ']];'
        [Rbracketrbrace] = 31                     ' ']}'
        [Caret] = 32                              ' '^'
        [Lbrace] = 33                             ' '{'
        [Lbracelbracket] = 34                     ' '{['
        [Pipe] = 35                               ' '|'
        [Rbrace] = 36                             ' '}'
        [Plus] = 37                               ' '+'
        [Plusplus] = 38                           ' '++'
        [Minusgt] = 39                            ' '->'
        [Bajo] = 40                               ' BAJO
        [Digito] = 41                             ' DIGITO
        [Errorlparen] = 42                        ' 'error('
        [Float] = 43                              ' Float
        [Int] = 44                                ' Int
        [Letra] = 45                              ' LETRA
        [Newline] = 46                            ' NewLine
        [Simbololparen] = 47                      ' 'simbolo('
        [Simple] = 48                             ' SIMPLE
        [String] = 49                             ' String
        [Todos] = 50                              ' TODOS
        [Token] = 51                              ' Token
        [Tokendot] = 52                           ' 'token.'
        [Ttodos] = 53                             ' TTODOS
        [Yycolumna] = 54                          ' yycolumna
        [Yyfila] = 55                             ' yyfila
        [Yytexto] = 56                            ' yytexto
        [A] = 57                                  ' <A>
        [A1] = 58                                 ' <A1>
        [A2] = 59                                 ' <A2>
        [Aa] = 60                                 ' <AA>
        [B] = 61                                  ' <B>
        [Boddy_corchete] = 62                     ' <BODDY_CORCHETE>
        [Body_def] = 63                           ' <BODY_DEF>
        [Body_simbolo] = 64                       ' <BODY_SIMBOLO>
        [Cadena] = 65                             ' <CADENA>
        [Comienzo] = 66                           ' <COMIENZO>
        [Crgl] = 67                               ' <CRGL>
        [Cuerpotoken] = 68                        ' <CUERPOTOKEN>
        [Def] = 69                                ' <DEF>
        [Error2] = 70                             ' <ERROR>
        [Exp] = 71                                ' <EXP>
        [Expresion] = 72                          ' <EXPRESION>
        [Fin] = 73                                ' <FIN>
        [Guion] = 74                              ' <GUION>
        [Inicio] = 75                             ' <Inicio>
        [Metodo] = 76                             ' <METODO>
        [Newline2] = 77                           ' <NEWLINE>
        [Opcion] = 78                             ' <OPCION>
        [Opciones] = 79                           ' <OPCIONES>
        [Regla] = 80                              ' <REGLA>
        [Regular] = 81                            ' <REGULAR>
        [Rep_macro] = 82                          ' <REP_MACRO>
        [Rgl] = 83                                ' <RGL>
        [Simbolo] = 84                            ' <SIMBOLO>
        [Terminal] = 85                           ' <TERMINAL>
        [Tipotkn] = 86                            ' <TIPOTKN>
        [Tkn] = 87                                ' <TKN>
        [Token2] = 88                             ' <TOKEN>
        [Valnum] = 89                             ' <VALNUM>
        [Valval] = 90                             ' <VALVAL>
    End Enum

    Private Enum ProductionIndex
        [Newline_Newline] = 0                     ' <NEWLINE> ::= NewLine <NEWLINE>
        [Newline] = 1                             ' <NEWLINE> ::= 
        [Inicio] = 2                              ' <Inicio> ::= <NEWLINE> <COMIENZO> <NEWLINE>
        [Comienzo] = 3                            ' <COMIENZO> ::= <COMIENZO> <NEWLINE> <OPCION>
        [Comienzo2] = 4                           ' <COMIENZO> ::= <OPCION>
        [Opcion] = 5                              ' <OPCION> ::= <TOKEN>
        [Opcion2] = 6                             ' <OPCION> ::= <DEF>
        [Opcion3] = 7                             ' <OPCION> ::= <REGLA>
        [Opcion4] = 8                             ' <OPCION> ::= <OPCIONES>
        [Opciones_Percentcasesensitive] = 9       ' <OPCIONES> ::= '%caseSensitive'
        [Opciones_Percentutf8] = 10               ' <OPCIONES> ::= '%UTF8'
        [Opciones_Percentansi] = 11               ' <OPCIONES> ::= '%ANSI'
        [Token_Percenttokenpercent_Lbracelbracket_Rbracketrbrace] = 12 ' <TOKEN> ::= '%TOKEN%' <NEWLINE> '{[' <NEWLINE> <TKN> <NEWLINE> ']}'
        [Token_Percenttokenpercent_Lbracelbracket_Rbracketrbrace2] = 13 ' <TOKEN> ::= '%TOKEN%' <NEWLINE> '{[' <NEWLINE> ']}'
        [Tkn_Colon_Semi] = 14                     ' <TKN> ::= <TKN> <NEWLINE> <CUERPOTOKEN> ':' <TIPOTKN> ';'
        [Tkn_Colon_Semi2] = 15                    ' <TKN> ::= <CUERPOTOKEN> ':' <TIPOTKN> ';'
        [Cuerpotoken_Comma] = 16                  ' <CUERPOTOKEN> ::= <CUERPOTOKEN> ',' <REP_MACRO>
        [Cuerpotoken] = 17                        ' <CUERPOTOKEN> ::= <REP_MACRO>
        [Tipotkn_Int] = 18                        ' <TIPOTKN> ::= Int
        [Tipotkn_Float] = 19                      ' <TIPOTKN> ::= Float
        [Tipotkn_String] = 20                     ' <TIPOTKN> ::= String
        [Tipotkn_Token] = 21                      ' <TIPOTKN> ::= Token
        [Def_Percentdefpercent_Lbracelbracket_Rbracketrbrace] = 22 ' <DEF> ::= '%Def%' <NEWLINE> '{[' <NEWLINE> <BODY_DEF> <NEWLINE> ']}'
        [Def_Percentdefpercent_Lbracelbracket_Rbracketrbrace2] = 23 ' <DEF> ::= '%Def%' <NEWLINE> '{[' <NEWLINE> ']}'
        [Body_def] = 24                           ' <BODY_DEF> ::= <BODY_DEF> <REGULAR>
        [Body_def2] = 25                          ' <BODY_DEF> ::= <REGULAR>
        [Regular_Minusgt_Newline] = 26            ' <REGULAR> ::= <REP_MACRO> '->' <EXPRESION> NewLine
        [Rep_macro_Digito] = 27                   ' <REP_MACRO> ::= <REP_MACRO> DIGITO
        [Rep_macro_Letra] = 28                    ' <REP_MACRO> ::= <REP_MACRO> LETRA
        [Rep_macro_Bajo] = 29                     ' <REP_MACRO> ::= <REP_MACRO> BAJO
        [Rep_macro_Letra2] = 30                   ' <REP_MACRO> ::= LETRA
        [Expresion_Pipe] = 31                     ' <EXPRESION> ::= <EXPRESION> '|' <B>
        [Expresion] = 32                          ' <EXPRESION> ::= <B>
        [B] = 33                                  ' <B> ::= <B> <EXP>
        [B2] = 34                                 ' <B> ::= <EXP>
        [Exp_Times] = 35                          ' <EXP> ::= <A> '*'
        [Exp_Question] = 36                       ' <EXP> ::= <A> '?'
        [Exp_Plus] = 37                           ' <EXP> ::= <A> '+'
        [Exp] = 38                                ' <EXP> ::= <A>
        [A_Lparen_Rparen] = 39                    ' <A> ::= '(' <EXPRESION> ')'
        [A_Lbracket_Rbracket] = 40                ' <A> ::= '[' <BODDY_CORCHETE> ']'
        [A_Lbrace_Rbrace] = 41                    ' <A> ::= '{' <REP_MACRO> '}'
        [A_Caret_Dollar] = 42                     ' <A> ::= '^' <EXPRESION> '$'
        [A] = 43                                  ' <A> ::= <FIN>
        [Fin_Digito] = 44                         ' <FIN> ::= DIGITO
        [Fin_Letra] = 45                          ' <FIN> ::= LETRA
        [Fin_Todos] = 46                          ' <FIN> ::= TODOS
        [Fin_Backslashn] = 47                     ' <FIN> ::= '\n'
        [Fin_Backslashr] = 48                     ' <FIN> ::= '\r'
        [Fin_Backslashquote] = 49                 ' <FIN> ::= '\"'
        [Fin_Dot] = 50                            ' <FIN> ::= '.'
        [Fin_Lbracketcolonespaciocolonrbracket] = 51 ' <FIN> ::= '[:ESPACIO:]'
        [Fin_Lbracketcolonblancocolonrbracket] = 52 ' <FIN> ::= '[:BLANCO:]'
        [Fin_Simple] = 53                         ' <FIN> ::= SIMPLE
        [Boddy_corchete] = 54                     ' <BODDY_CORCHETE> ::= <CADENA>
        [Boddy_corchete2] = 55                    ' <BODDY_CORCHETE> ::= <GUION>
        [Cadena] = 56                             ' <CADENA> ::= <CADENA> <TERMINAL>
        [Cadena2] = 57                            ' <CADENA> ::= <TERMINAL> <TERMINAL>
        [Terminal_Digito] = 58                    ' <TERMINAL> ::= DIGITO
        [Terminal_Letra] = 59                     ' <TERMINAL> ::= LETRA
        [Guion_Digito_Minus_Digito] = 60          ' <GUION> ::= <GUION> DIGITO '-' DIGITO
        [Guion_Letra_Minus_Letra] = 61            ' <GUION> ::= <GUION> LETRA '-' LETRA
        [Guion_Digito_Minus_Digito2] = 62         ' <GUION> ::= DIGITO '-' DIGITO
        [Guion_Letra_Minus_Letra2] = 63           ' <GUION> ::= LETRA '-' LETRA
        [Regla_Percentreglaspercent_Lbracelbracket_Rbracketrbrace] = 64 ' <REGLA> ::= '%Reglas%' <NEWLINE> '{[' <NEWLINE> <RGL> <NEWLINE> ']}'
        [Regla_Percentreglaspercent_Lbracelbracket_Rbracketrbrace2] = 65 ' <REGLA> ::= '%Reglas%' <NEWLINE> '{[' <NEWLINE> ']}'
        [Rgl] = 66                                ' <RGL> ::= <RGL> <NEWLINE> <CRGL>
        [Rgl2] = 67                               ' <RGL> ::= <CRGL>
        [Crgl_Lbrace_Rbrace_Lbracketlbracket_Rbracketrbracketsemi] = 68 ' <CRGL> ::= '{' <EXPRESION> '}' '[[' <METODO> ']];'
        [Metodo] = 69                             ' <METODO> ::= <SIMBOLO>
        [Metodo2] = 70                            ' <METODO> ::= <ERROR>
        [Simbolo_Simbololparen_Rparensemi] = 71   ' <SIMBOLO> ::= 'simbolo(' <BODY_SIMBOLO> ');'
        [Error_Errorlparen_Comma_Comma_Rparensemi] = 72 ' <ERROR> ::= 'error(' <VALNUM> ',' <VALNUM> ',' <VALVAL> ');'
        [Valnum_Plus] = 73                        ' <VALNUM> ::= <VALNUM> '+' <A1>
        [Valnum_Minus] = 74                       ' <VALNUM> ::= <VALNUM> '-' <A1>
        [Valnum] = 75                             ' <VALNUM> ::= <A1>
        [A1_Times] = 76                           ' <A1> ::= <A1> '*' <A2>
        [A1_Div] = 77                             ' <A1> ::= <A1> '/' <A2>
        [A1] = 78                                 ' <A1> ::= <A2>
        [A2_Yyfila] = 79                          ' <A2> ::= yyfila
        [A2_Yycolumna] = 80                       ' <A2> ::= yycolumna
        [A2_Plusplus] = 81                        ' <A2> ::= '++' <AA>
        [A2_Minusminus] = 82                      ' <A2> ::= '--' <AA>
        [A2_Digito] = 83                          ' <A2> ::= DIGITO
        [A2_Ttodos] = 84                          ' <A2> ::= TTODOS
        [A2_Letra] = 85                           ' <A2> ::= LETRA
        [Aa] = 86                                 ' <AA> ::= <REP_MACRO>
        [Aa_Yyfila] = 87                          ' <AA> ::= yyfila
        [Aa_Yycolumna] = 88                       ' <AA> ::= yycolumna
        [Body_simbolo_Tokendot_Comma] = 89        ' <BODY_SIMBOLO> ::= 'token.' <REP_MACRO> ',' <VALVAL>
        [Body_simbolo_Tokendot] = 90              ' <BODY_SIMBOLO> ::= 'token.' <REP_MACRO>
        [Valval_Yytexto] = 91                     ' <VALVAL> ::= yytexto
        [Valval] = 92                             ' <VALVAL> ::= <CADENA>
        [Valval_Digito] = 93                      ' <VALVAL> ::= DIGITO
        [Valval_Letra] = 94                       ' <VALVAL> ::= LETRA
    End Enum

    Public Program As Object     'You might derive a specific object

    Public Sub Setup()
        'This procedure can be called to load the parse tables. The class can
        'read tables using a BinaryReader.

        Parser.LoadTables(Path.Combine(Application.StartupPath, "tablas.egt"))
    End Sub

    Public Function Parse(ByVal Reader As TextReader) As Boolean
        'This procedure starts the GOLD Parser Engine and handles each of the
        'messages it returns. Each time a reduction is made, you can create new
        'custom object and reassign the .CurrentReduction property. Otherwise, 
        'the system will use the Reduction object that was returned.
        '
        'The resulting tree will be a pure representation of the language 
        'and will be ready to implement.

        Dim Response As GOLD.ParseMessage
        Dim Done As Boolean                  'Controls when we leave the loop
        Dim Accepted As Boolean = False      'Was the parse successful?

        Accepted = False    'Unless the program is accepted by the parser

        Parser.Open(Reader)
        Parser.TrimReductions = False  'Please read about this feature before enabling  

        Done = False
        Do Until Done
            Response = Parser.Parse()

            Select Case Response
                Case GOLD.ParseMessage.LexicalError
                    'Cannot recognize token
                    Done = False
                    MessageBox.Show("Lexical Error: " & Parser.CurrentToken.Data & " Line: " & Parser.CurrentToken.Position.Line & " Column: " & Parser.CurrentToken.Position.Column)
                    Parser.DiscardCurrentToken()

                Case GOLD.ParseMessage.SyntaxError
                    'Expecting a different token
                    Done = False
                    MessageBox.Show("Sintax Error: " & Parser.CurrentToken.Data & " Line: " & Parser.CurrentToken.Position.Line & " Column: " & Parser.CurrentToken.Position.Column)
                    Parser.DiscardCurrentToken()

                Case GOLD.ParseMessage.Reduction
                    'Create a customized object to store the reduction
                    Parser.CurrentReduction = CreateNewObject(Parser.CurrentReduction)

                Case GOLD.ParseMessage.Accept
                    'Accepted!
                    'Program = Parser.CurrentReduction  'The root node!                 
                    Done = True
                    Accepted = True
                    MessageBox.Show("CADENA ACEPTADA")

                Case GOLD.ParseMessage.TokenRead
                    'You don't have to do anything here.

                Case GOLD.ParseMessage.InternalError
                    'INTERNAL ERROR! Something is horribly wrong.
                    Done = True

                Case GOLD.ParseMessage.NotLoadedError
                    'This error occurs if the CGT was not loaded.                   
                    Done = True

                Case GOLD.ParseMessage.GroupError
                    'COMMENT ERROR! Unexpected end of file
                    Done = True
            End Select
        Loop

        Return Accepted
    End Function


    Private Function CreateNewObject(Reduction as GOLD.Reduction) As Object
        Dim Result As Object = Nothing

        With Reduction
            Select Case .Parent.TableIndex                        
                Case ProductionIndex.Newline_Newline                 
                    ' <NEWLINE> ::= NewLine <NEWLINE> 

                Case ProductionIndex.Newline                 
                    ' <NEWLINE> ::=  

                Case ProductionIndex.Inicio                 
                    ' <Inicio> ::= <NEWLINE> <COMIENZO> <NEWLINE> 

                Case ProductionIndex.Comienzo                 
                    ' <COMIENZO> ::= <COMIENZO> <NEWLINE> <OPCION> 

                Case ProductionIndex.Comienzo2                 
                    ' <COMIENZO> ::= <OPCION> 

                Case ProductionIndex.Opcion                 
                    ' <OPCION> ::= <TOKEN> 

                Case ProductionIndex.Opcion2                 
                    ' <OPCION> ::= <DEF> 

                Case ProductionIndex.Opcion3                 
                    ' <OPCION> ::= <REGLA> 

                Case ProductionIndex.Opcion4                 
                    ' <OPCION> ::= <OPCIONES> 

                Case ProductionIndex.Opciones_Percentcasesensitive                 
                    ' <OPCIONES> ::= '%caseSensitive' 

                Case ProductionIndex.Opciones_Percentutf8                 
                    ' <OPCIONES> ::= '%UTF8' 

                Case ProductionIndex.Opciones_Percentansi                 
                    ' <OPCIONES> ::= '%ANSI' 

                Case ProductionIndex.Token_Percenttokenpercent_Lbracelbracket_Rbracketrbrace                 
                    ' <TOKEN> ::= '%TOKEN%' <NEWLINE> '{[' <NEWLINE> <TKN> <NEWLINE> ']}' 

                Case ProductionIndex.Token_Percenttokenpercent_Lbracelbracket_Rbracketrbrace2                 
                    ' <TOKEN> ::= '%TOKEN%' <NEWLINE> '{[' <NEWLINE> ']}' 

                Case ProductionIndex.Tkn_Colon_Semi                 
                    ' <TKN> ::= <TKN> <NEWLINE> <CUERPOTOKEN> ':' <TIPOTKN> ';' 

                Case ProductionIndex.Tkn_Colon_Semi2                 
                    ' <TKN> ::= <CUERPOTOKEN> ':' <TIPOTKN> ';' 

                Case ProductionIndex.Cuerpotoken_Comma                 
                    ' <CUERPOTOKEN> ::= <CUERPOTOKEN> ',' <REP_MACRO> 

                Case ProductionIndex.Cuerpotoken                 
                    ' <CUERPOTOKEN> ::= <REP_MACRO> 

                Case ProductionIndex.Tipotkn_Int                 
                    ' <TIPOTKN> ::= Int 

                Case ProductionIndex.Tipotkn_Float                 
                    ' <TIPOTKN> ::= Float 

                Case ProductionIndex.Tipotkn_String                 
                    ' <TIPOTKN> ::= String 

                Case ProductionIndex.Tipotkn_Token                 
                    ' <TIPOTKN> ::= Token 

                Case ProductionIndex.Def_Percentdefpercent_Lbracelbracket_Rbracketrbrace                 
                    ' <DEF> ::= '%Def%' <NEWLINE> '{[' <NEWLINE> <BODY_DEF> <NEWLINE> ']}' 

                Case ProductionIndex.Def_Percentdefpercent_Lbracelbracket_Rbracketrbrace2                 
                    ' <DEF> ::= '%Def%' <NEWLINE> '{[' <NEWLINE> ']}' 

                Case ProductionIndex.Body_def                 
                    ' <BODY_DEF> ::= <BODY_DEF> <REGULAR> 

                Case ProductionIndex.Body_def2                 
                    ' <BODY_DEF> ::= <REGULAR> 

                Case ProductionIndex.Regular_Minusgt_Newline
                    ' <REGULAR> ::= <REP_MACRO> '->' <EXPRESION> NewLine 
                    Dim TEMPORAL As New LISTA_NODO
                    TEMPORAL.ID = OBTENER_STRING(.Item(0).Data)
                    TEMPORAL.RAIZ = .Item(2).Data

                    LISTA.Add(TEMPORAL)
                Case ProductionIndex.Rep_macro_Digito
                    ' <REP_MACRO> ::= <REP_MACRO> DIGITO 
                    Dim hijo As New NODO
                    hijo.correlativo = CONTADOR
                    hijo.id = "DIGITO"
                    hijo.layer = .Item(1).Data

                    CONTADOR = CONTADOR + 1

                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "ID"
                    temporal.layer = "."

                    temporal.hijo_izquierdo = .Item(0).Data
                    temporal.hijo_derecho = hijo

                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Rep_macro_Letra
                    ' <REP_MACRO> ::= <REP_MACRO> LETRA 
                    Dim hijo As New NODO
                    hijo.correlativo = CONTADOR
                    hijo.id = "LETRA"
                    hijo.layer = .Item(1).Data

                    CONTADOR = CONTADOR + 1

                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "ID"
                    temporal.layer = "."

                    temporal.hijo_izquierdo = .Item(0).Data
                    temporal.hijo_derecho = hijo

                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Rep_macro_Bajo
                    ' <REP_MACRO> ::= <REP_MACRO> BAJO 
                    Dim hijo As New NODO
                    hijo.correlativo = CONTADOR
                    hijo.id = "BAJO"
                    hijo.layer = .Item(1).Data

                    CONTADOR = CONTADOR + 1

                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "ID"
                    temporal.layer = "."

                    temporal.hijo_izquierdo = .Item(0).Data
                    temporal.hijo_derecho = hijo

                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Rep_macro_Letra2
                    ' <REP_MACRO> ::= LETRA 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "LETRA"
                    temporal.layer = .Item(0).Data

                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Expresion_Pipe
                    ' <EXPRESION> ::= <EXPRESION> '|' <B> 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "OR"
                    temporal.layer = "|"
                    temporal.hijo_izquierdo = .Item(0).Data
                    temporal.hijo_derecho = .Item(2).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Expresion
                    ' <EXPRESION> ::= <B> 
                    Return .Item(0).Data
                Case ProductionIndex.B
                    ' <B> ::= <B> <EXP> 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "EXPRESION"
                    temporal.layer = "."
                    temporal.hijo_izquierdo = .Item(0).Data
                    temporal.hijo_derecho = .Item(1).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.B2
                    ' <B> ::= <EXP> 
                    Return .Item(0).Data
                Case ProductionIndex.Exp_Times
                    ' <EXP> ::= <A> '*' 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "CERO_MAS"
                    temporal.layer = "*"
                    temporal.hijo_izquierdo = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Exp_Question
                    ' <EXP> ::= <A> '?' 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "UNO_CERO"
                    temporal.layer = "?"
                    temporal.hijo_izquierdo = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Exp_Plus
                    ' <EXP> ::= <A> '+' 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "UNO_MAS"
                    temporal.layer = "+"
                    temporal.hijo_izquierdo = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Exp
                    ' <EXP> ::= <A> 
                    Return .Item(0).Data
                Case ProductionIndex.A_Lparen_Rparen
                    ' <A> ::= '(' <EXPRESION> ')' 
                    Dim hijo1 As New NODO
                    hijo1.correlativo = CONTADOR
                    hijo1.id = "PARENTECIS"
                    hijo1.layer = "("
                    CONTADOR = CONTADOR + 1
                    Dim hijo2 As New NODO
                    hijo2.correlativo = CONTADOR
                    hijo2.id = "PARENTECIS"
                    hijo2.layer = ")"
                    CONTADOR = CONTADOR + 1
                    Dim union1 As New NODO
                    union1.correlativo = CONTADOR
                    union1.id = "EXPRESION"
                    union1.layer = "."
                    union1.hijo_izquierdo = hijo1
                    union1.hijo_derecho = .Item(1).Data
                    CONTADOR = CONTADOR + 1
                    Dim union2 As New NODO
                    union2.correlativo = CONTADOR
                    union2.id = "EXPRESION"
                    union2.layer = "."
                    union2.hijo_izquierdo = union1
                    union2.hijo_derecho = hijo2
                    CONTADOR = CONTADOR + 1
                    Return union2
                Case ProductionIndex.A_Lbracket_Rbracket
                    ' <A> ::= '[' <BODDY_CORCHETE> ']' 
                    Dim hijo1 As New NODO
                    hijo1.correlativo = CONTADOR
                    hijo1.id = "CORCHETE"
                    hijo1.layer = "["
                    CONTADOR = CONTADOR + 1
                    Dim hijo2 As New NODO
                    hijo2.correlativo = CONTADOR
                    hijo2.id = "CORCHETE"
                    hijo2.layer = "]"
                    CONTADOR = CONTADOR + 1
                    Dim union1 As New NODO
                    union1.correlativo = CONTADOR
                    union1.id = "EXPRESION"
                    union1.layer = "."
                    union1.hijo_izquierdo = hijo1
                    union1.hijo_derecho = .Item(1).Data
                    CONTADOR = CONTADOR + 1
                    Dim union2 As New NODO
                    union2.correlativo = CONTADOR
                    union2.id = "EXPRESION"
                    union2.layer = "."
                    union2.hijo_izquierdo = union1
                    union2.hijo_derecho = hijo2
                    CONTADOR = CONTADOR + 1
                    Return union2
                Case ProductionIndex.A_Lbrace_Rbrace
                    ' <A> ::= '{' <REP_MACRO> '}' 
                    Dim hijo1 As New NODO
                    hijo1.correlativo = CONTADOR
                    hijo1.id = "LLAVE"
                    hijo1.layer = "{"
                    CONTADOR = CONTADOR + 1
                    Dim hijo2 As New NODO
                    hijo2.correlativo = CONTADOR
                    hijo2.id = "LLAVE"
                    hijo2.layer = "}"
                    CONTADOR = CONTADOR + 1
                    Dim union1 As New NODO
                    union1.correlativo = CONTADOR
                    union1.id = "EXPRESION"
                    union1.layer = "."
                    union1.hijo_izquierdo = hijo1
                    union1.hijo_derecho = .Item(1).Data
                    CONTADOR = CONTADOR + 1
                    Dim union2 As New NODO
                    union2.correlativo = CONTADOR
                    union2.id = "EXPRESION"
                    union2.layer = "."
                    union2.hijo_izquierdo = union1
                    union2.hijo_derecho = hijo2
                    CONTADOR = CONTADOR + 1
                    Return union2
                Case ProductionIndex.A_Caret_Dollar
                    ' <A> ::= '^' <EXPRESION> '$' 
                    Dim hijo1 As New NODO
                    hijo1.correlativo = CONTADOR
                    hijo1.id = "ESPECIAL"
                    hijo1.layer = "^"
                    CONTADOR = CONTADOR + 1
                    Dim hijo2 As New NODO
                    hijo2.correlativo = CONTADOR
                    hijo2.id = "ESPECIAL"
                    hijo2.layer = "$"
                    CONTADOR = CONTADOR + 1
                    Dim union1 As New NODO
                    union1.correlativo = CONTADOR
                    union1.id = "EXPRESION"
                    union1.layer = "."
                    union1.hijo_izquierdo = hijo1
                    union1.hijo_derecho = .Item(1).Data
                    CONTADOR = CONTADOR + 1
                    Dim union2 As New NODO
                    union2.correlativo = CONTADOR
                    union2.id = "EXPRESION"
                    union2.layer = "."
                    union2.hijo_izquierdo = union1
                    union2.hijo_derecho = hijo2
                    CONTADOR = CONTADOR + 1
                    Return union2
                Case ProductionIndex.A
                    ' <A> ::= <FIN> 
                    Return .Item(0).Data
                Case ProductionIndex.Fin_Digito
                    ' <FIN> ::= DIGITO 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "DIGITO"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Fin_Letra
                    ' <FIN> ::= LETRA 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "LETRA"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Fin_Todos
                    ' <FIN> ::= TODOS 
                    temporal.correlativo = CONTADOR
                    temporal.id = "CUALQUIERA"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Fin_Backslashn
                    ' <FIN> ::= '\n' 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "SALTO"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Fin_Backslashr
                    ' <FIN> ::= '\r' 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "RETURN"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Fin_Backslashquote
                    ' <FIN> ::= '\"' 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "COMILLA_DOBLE"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Fin_Dot
                    ' <FIN> ::= '.' 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "PUNTO"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Fin_Lbracketcolonespaciocolonrbracket
                    ' <FIN> ::= '[:ESPACIO:]' 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "ESPACIO"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Fin_Lbracketcolonblancocolonrbracket
                    ' <FIN> ::= '[:BLANCO:]' 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "BLANCO"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Fin_Simple
                    ' <FIN> ::= SIMPLE 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "COMILLA SIMPLE"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Boddy_corchete
                    ' <BODDY_CORCHETE> ::= <CADENA> 
                    Return .Item(0).Data
                Case ProductionIndex.Boddy_corchete2
                    ' <BODDY_CORCHETE> ::= <GUION> 
                    Return .Item(0).Data
                Case ProductionIndex.Cadena
                    ' <CADENA> ::= <CADENA> <TERMINAL> 
                    Dim terminal As New NODO
                    terminal.correlativo = CONTADOR
                    terminal.id = "EXPRESION"
                    terminal.layer = "."
                    terminal.hijo_izquierdo = .Item(0).Data
                    terminal.hijo_derecho = .Item(1).Data
                    CONTADOR = CONTADOR + 1
                    Return terminal
                Case ProductionIndex.Cadena2
                    ' <CADENA> ::= <TERMINAL> <TERMINAL> 
                    Dim terminal As New NODO
                    terminal.correlativo = CONTADOR
                    terminal.id = "EXPRESION"
                    terminal.layer = "."
                    terminal.hijo_izquierdo = .Item(0).Data
                    terminal.hijo_derecho = .Item(1).Data
                    CONTADOR = CONTADOR + 1
                    Return terminal
                Case ProductionIndex.Terminal_Digito
                    ' <TERMINAL> ::= DIGITO 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "DIGITO"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Terminal_Letra
                    ' <TERMINAL> ::= LETRA 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "LETRA"
                    temporal.layer = .Item(0).Data
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Guion_Digito_Minus_Digito
                    ' <GUION> ::= <GUION> DIGITO '-' DIGITO 
                    Dim hijo1 As New NODO
                    hijo1.correlativo = CONTADOR
                    hijo1.id = "RANGO"
                    hijo1.layer = "RANGO"
                    CONTADOR = CONTADOR + 1

                    Dim terminal As New NODO
                    terminal.correlativo = CONTADOR
                    terminal.id = "EXPRESION"
                    terminal.layer = "|"
                    terminal.hijo_izquierdo = .Item(0).Data
                    terminal.hijo_derecho = hijo1
                    CONTADOR = CONTADOR + 1
                    Return terminal
                Case ProductionIndex.Guion_Letra_Minus_Letra
                    ' <GUION> ::= <GUION> LETRA '-' LETRA 
                    Dim hijo1 As New NODO
                    hijo1.correlativo = CONTADOR
                    hijo1.id = "RANGO"
                    hijo1.layer = "RANGO"
                    CONTADOR = CONTADOR + 1

                    Dim terminal As New NODO
                    terminal.correlativo = CONTADOR
                    terminal.id = "EXPRESION"
                    terminal.layer = "|"
                    terminal.hijo_izquierdo = .Item(0).Data
                    terminal.hijo_derecho = hijo1
                    CONTADOR = CONTADOR + 1
                    Return terminal
                Case ProductionIndex.Guion_Digito_Minus_Digito2
                    ' <GUION> ::= DIGITO '-' DIGITO 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "RANGO"
                    temporal.layer = "CONTADOR"
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Guion_Letra_Minus_Letra2
                    ' <GUION> ::= LETRA '-' LETRA 
                    Dim temporal As New NODO
                    temporal.correlativo = CONTADOR
                    temporal.id = "RANGO"
                    temporal.layer = "CONTADOR"
                    CONTADOR = CONTADOR + 1
                    Return temporal
                Case ProductionIndex.Regla_Percentreglaspercent_Lbracelbracket_Rbracketrbrace                 
                    ' <REGLA> ::= '%Reglas%' <NEWLINE> '{[' <NEWLINE> <RGL> <NEWLINE> ']}' 

                Case ProductionIndex.Regla_Percentreglaspercent_Lbracelbracket_Rbracketrbrace2                 
                    ' <REGLA> ::= '%Reglas%' <NEWLINE> '{[' <NEWLINE> ']}' 

                Case ProductionIndex.Rgl                 
                    ' <RGL> ::= <RGL> <NEWLINE> <CRGL> 

                Case ProductionIndex.Rgl2                 
                    ' <RGL> ::= <CRGL> 

                Case ProductionIndex.Crgl_Lbrace_Rbrace_Lbracketlbracket_Rbracketrbracketsemi                 
                    ' <CRGL> ::= '{' <EXPRESION> '}' '[[' <METODO> ']];' 

                Case ProductionIndex.Metodo                 
                    ' <METODO> ::= <SIMBOLO> 

                Case ProductionIndex.Metodo2                 
                    ' <METODO> ::= <ERROR> 

                Case ProductionIndex.Simbolo_Simbololparen_Rparensemi                 
                    ' <SIMBOLO> ::= 'simbolo(' <BODY_SIMBOLO> ');' 

                Case ProductionIndex.Error_Errorlparen_Comma_Comma_Rparensemi                 
                    ' <ERROR> ::= 'error(' <VALNUM> ',' <VALNUM> ',' <VALVAL> ');' 

                Case ProductionIndex.Valnum_Plus                 
                    ' <VALNUM> ::= <VALNUM> '+' <A1> 

                Case ProductionIndex.Valnum_Minus                 
                    ' <VALNUM> ::= <VALNUM> '-' <A1> 

                Case ProductionIndex.Valnum                 
                    ' <VALNUM> ::= <A1> 

                Case ProductionIndex.A1_Times                 
                    ' <A1> ::= <A1> '*' <A2> 

                Case ProductionIndex.A1_Div                 
                    ' <A1> ::= <A1> '/' <A2> 

                Case ProductionIndex.A1                 
                    ' <A1> ::= <A2> 

                Case ProductionIndex.A2_Yyfila                 
                    ' <A2> ::= yyfila 

                Case ProductionIndex.A2_Yycolumna                 
                    ' <A2> ::= yycolumna 

                Case ProductionIndex.A2_Plusplus                 
                    ' <A2> ::= '++' <AA> 

                Case ProductionIndex.A2_Minusminus                 
                    ' <A2> ::= '--' <AA> 

                Case ProductionIndex.A2_Digito                 
                    ' <A2> ::= DIGITO 

                Case ProductionIndex.A2_Ttodos                 
                    ' <A2> ::= TTODOS 

                Case ProductionIndex.A2_Letra                 
                    ' <A2> ::= LETRA 

                Case ProductionIndex.Aa                 
                    ' <AA> ::= <REP_MACRO> 

                Case ProductionIndex.Aa_Yyfila                 
                    ' <AA> ::= yyfila 

                Case ProductionIndex.Aa_Yycolumna                 
                    ' <AA> ::= yycolumna 

                Case ProductionIndex.Body_simbolo_Tokendot_Comma                 
                    ' <BODY_SIMBOLO> ::= 'token.' <REP_MACRO> ',' <VALVAL> 

                Case ProductionIndex.Body_simbolo_Tokendot                 
                    ' <BODY_SIMBOLO> ::= 'token.' <REP_MACRO> 

                Case ProductionIndex.Valval_Yytexto                 
                    ' <VALVAL> ::= yytexto 

                Case ProductionIndex.Valval                 
                    ' <VALVAL> ::= <CADENA> 

                Case ProductionIndex.Valval_Digito                 
                    ' <VALVAL> ::= DIGITO 

                Case ProductionIndex.Valval_Letra                 
                    ' <VALVAL> ::= LETRA 

            End Select
        End With     

        Return Result
    End Function
End Module
